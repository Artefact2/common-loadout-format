#!/usr/bin/env php
<?php
/* Author : Romain "Artefact2" Dalmaso <artefact2@gmail.com>
 * This program is free software. It comes without any warranty, to
 * the extent permitted by applicable law. You can redistribute it
 * and/or modify it under the terms of the Do What The Fuck You Want
 * To Public License, Version 2, as published by Sam Hocevar. See
 * http://sam.zoy.org/wtfpl/COPYING for more details. */

/* Create a SQLite database from Phobos-generated JSON tables. */

if($argc != 2 || !is_dir($argv[1])) {
	echo "Usage: ".$argv[0]." <json_files>\n";
	die(1);
}

ini_set('memory_limit', -1);

$dbfile = 'eve-sqlite3-phobos.db';
$db = new SQLite3($dbfile, SQLITE3_OPEN_CREATE | SQLITE3_OPEN_READWRITE);

foreach(glob($argv[1].'/*.json') as $jsonfile) {
	$table = strtolower(pathinfo($jsonfile, PATHINFO_FILENAME));
	echo $table." ";

	$q = 'CREATE TABLE IF NOT EXISTS '.$table;

	$rows = json_decode(file_get_contents($jsonfile), true);
	if(count($rows) == 0) continue;

	$types = reset($rows);
	$nulls = array();

	/* Try to fetch as many non-NULL values in columns as possible */
	foreach($rows as $row) {
		foreach($row as $k => $v) {
			if($types[$k] === null && $v !== null) {
				$types[$k] = $v;
			}

			if($v === null) $nulls[$k] = true;
		}
	}

	$columns = array();
	foreach($types as $k => $v) {
		if(is_string($v)) {
			$type = 'TEXT';
		} else if(is_int($v) || is_bool($v)) {
			$type = 'INTEGER';
		} else if(is_float($v)) {
			$type = 'REAL';
		} else if(is_null($v)) {
			$type = 'INTEGER';
		} else {
			echo "Unknown type: ";
			var_dump($v);
			continue 2;
		}

		if(!isset($nulls[$k]) || $nulls[$k] !== true) {
			$type .= ' NOT NULL';
		}

		$columns[] = strtolower($k).' '.$type;
	}

	$q .= " (".implode(', ', $columns).")";
	$db->query($q);
	$db->query('DELETE FROM '.$table);

	$fullvalues = array();
	$batchsize = 500;
	$i = 0;
	foreach($rows as $row) {
		$values = array();
		foreach($row as $k => $v) {
			/* XXX: Dirty dirty hack: ignore DUST stuff since it has
			 * duplicate typenames with some EVE modules */
			if($k === 'typeID' && $v >= 350000) continue 2;

			if($v === null) $v = 'NULL';
			else if(is_string($v)) $v = "'".$db->escapeString($v)."'";
			else if(is_bool($v)) $v = $v ? 1 : 0;
			else {
				/* Floats and integers */
				$v = (string)$v;
			}

			$values[] = $v;
		}

		$fullvalues[] = '('.implode(', ', $values).')';

		if((++$i % $batchsize) == 0) {
			$db->query('INSERT INTO '.$table.' VALUES '.implode(', ', $fullvalues));
			$fullvalues = array();
			echo ".";
		}
	}

	if(count($fullvalues) > 0) {
		$db->query('INSERT INTO '.$table.' VALUES '.implode(', ', $fullvalues));
		$fullvalues = array();
		echo ",";
	}

	echo "\n";
}
